<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        QmCC
</value>
  </data>
</root>